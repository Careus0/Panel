"""add phone_number column to bots table

Revision ID: 041ead4b2ea1
Revises: 
Create Date: 2025-05-31 06:23:38.935309

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '041ead4b2ea1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop any existing artifacts from failed migrations
    op.execute('DROP TABLE IF EXISTS bots_new')
    op.execute('DROP TABLE IF EXISTS bots_old')
    op.execute('DROP INDEX IF EXISTS ix_bots_id')
    
    # Create new table with all columns
    op.create_table('bots_new',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('status', sa.String(), nullable=True),
        sa.Column('phone_number', sa.String(), nullable=True),
        sa.Column('api_id', sa.String(), nullable=True),
        sa.Column('api_hash', sa.String(), nullable=True),
        sa.Column('session_string', sa.Text(), nullable=True),
        sa.Column('proxy_enabled', sa.Boolean(), nullable=True),
        sa.Column('proxy_type', sa.String(), nullable=True),
        sa.Column('proxy_host', sa.String(), nullable=True),
        sa.Column('proxy_port', sa.Integer(), nullable=True),
        sa.Column('proxy_username', sa.String(), nullable=True),
        sa.Column('proxy_password', sa.String(), nullable=True),
        sa.Column('promotion_settings', sa.JSON(), nullable=True),
        sa.Column('uptime', sa.String(), nullable=True),
        sa.Column('last_activity', sa.String(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('phone_number', name='uq_bots_phone_number')
    )

    # Copy data from old table
    op.execute('INSERT INTO bots_new (id, user_id, name, status, uptime, last_activity, created_at, updated_at) '
               'SELECT id, user_id, name, status, uptime, last_activity, created_at, updated_at FROM bots')
    
    # Drop old table
    op.drop_table('bots')
    
    # Rename new table to old name
    op.rename_table('bots_new', 'bots')
    
    # Create the index on the new table
    op.create_index('ix_bots_id', 'bots', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop any existing artifacts from failed migrations
    op.execute('DROP TABLE IF EXISTS bots_new')
    op.execute('DROP TABLE IF EXISTS bots_old')
    op.execute('DROP INDEX IF EXISTS ix_bots_id')
    
    # Create old table structure
    op.create_table('bots_old',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('status', sa.String(), nullable=True),
        sa.Column('token', sa.Text(), nullable=True),
        sa.Column('uptime', sa.String(), nullable=True),
        sa.Column('last_activity', sa.String(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    # Copy data from current table
    op.execute('INSERT INTO bots_old (id, user_id, name, status, uptime, last_activity, created_at, updated_at) '
               'SELECT id, user_id, name, status, uptime, last_activity, created_at, updated_at FROM bots')
    
    # Drop current table
    op.drop_table('bots')
    
    # Rename old table to original name
    op.rename_table('bots_old', 'bots')
    
    # Create the index on the new table
    op.create_index('ix_bots_id', 'bots', ['id'])
    # ### end Alembic commands ###
